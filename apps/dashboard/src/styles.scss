
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$dashboard-primary: mat.define-palette(mat.$indigo-palette);
$dashboard-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$dashboard-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$dashboard-theme: mat.define-light-theme((
  color: (
    primary: $dashboard-primary,
    accent: $dashboard-accent,
    warn: $dashboard-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($dashboard-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

h1, h2, h3, h4, h5, h6, p, a, button {
  margin: 0 !important;
}

// TODO: Find a better place for this
.navigation {
  display: flex;
  justify-content: space-between;
  padding: .75rem; // TODO: Make this a css variable
}

.nav-item {
  color: white; // TODO: make this a css variable
  //background-color: rgba(255, 255, 255, 0.4); // TODO: Make this a css variable
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
  text-decoration: none;
  border-radius: 10px; // TODO: make this a css variable
  width: 6rem;
  height: 2rem;
  padding: .75rem; // TODO: make this a css variable
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all .2s ease;
  cursor: pointer;
  &:hover {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4); // TODO: Make this a css variable
  }
  &:active {
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4); // TODO: Make this a css variable
  }
}

.circular {
  height: 4rem;
  width: 4rem;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  // TEMPORARY
  border: 1px solid rgba(0, 0, 0, 0.3);
}
